// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MineshopContext))]
    [Migration("20220710064955_AddProductEntity")]
    partial class AddProductEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mineshop.Server.Domain.Domains.CategoryEntity", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<Guid>("ServerIdentifier")
                        .HasColumnType("uuid");

                    b.HasKey("Identifier");

                    b.HasIndex("ServerIdentifier");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Mineshop.Server.Domain.Domains.ProductEntity", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryIdentifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Identifier");

                    b.HasIndex("CategoryIdentifier");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mineshop.Server.Domain.Domains.ServerEntity", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Identifier");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Mineshop.Server.Domain.Domains.CategoryEntity", b =>
                {
                    b.HasOne("Mineshop.Server.Domain.Domains.ServerEntity", "Server")
                        .WithMany()
                        .HasForeignKey("ServerIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Mineshop.Server.Domain.Domains.ProductEntity", b =>
                {
                    b.HasOne("Mineshop.Server.Domain.Domains.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
